swagger: '2.0'
info:
  title: OpenML API
  description: >-
    REST API for sharing, organizing and reusing machine learning datasets,
    code, and experiments. Follows a predictive URL scheme from endpoint
    https://www.openml.org/api/v1/json (or /xml). You need to add your `api_key`
    to every call (see your account settings), or simply log in.
    See https://www.openml.org/api_data_docs for the file server API.
  version: 1.0.0
schemes:
  - https
basePath: /api/v1/json
produces:
  - application/json
paths:
  '/data/{id}':
    get:
      summary: Get dataset description
      description: >
        Returns information about a dataset. The information includes the name,
        information about the creator, URL to download it and more.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '110':
          description: Please provide data_id.
        '111':
          description: >-
            Unknown dataset. Data set description with data_id was not found in
            the database.
        '112':
          description: No access granted. This dataset is not shared with you.
        '200':
          description: A dataset description
          schema:
            $ref: '#/definitions/Data'
          examples:
            application/json: |-
              {
                "data_set_description": {
                  "id": "1",
                  "name": "anneal",
                  "version": "2",
                  "description": "...",
                  "format": "ARFF",
                  "upload_date": "2014-04-06 23:19:20",
                  "licence": "Public",
                  "url": "https://www.openml.org/data/download/1/dataset_1_anneal.arff",
                  "file_id": "1",
                  "default_target_attribute": "class",
                  "version_label": "2",
                  "tag": [
                    "study_1",
                    "uci"
                  ],
                  "visibility": "public",
                  "original_data_url": "https://www.openml.org/d/2",
                  "status": "active",
                  "md5_checksum": "d01f6ccd68c88b749b20bbe897de3713"
                }
              }
    delete:
      summary: Delete dataset
      description: >
        Deletes a dataset. Upon success, it returns the ID of the deleted
        dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: ID of the deleted dataset
          schema:
            type: object
            properties:
              data_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the deleted dataset, a positive integer'
          examples:
            application/json: |-
              {
                "data_delete": {
                  "id": "4328"
                }
              }
        '350':
          description: >-
            Please provide API key. In order to remove your content, please
            authenticate.
        '351':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators.
        '352':
          description: >-
            Dataset does not exists. The data ID could not be linked to an
            existing dataset.
        '353':
          description: >-
            Dataset is not owned by you. The dataset is owned by another user.
            Hence you cannot delete it.
        '354':
          description: >-
            Dataset is in use by other content. Can not be deleted. The data is
            used in tasks or runs. Delete other content before deleting this
            dataset.
        '355':
          description: >-
            Deleting dataset failed. Deleting the dataset failed. Please contact
            support team.
  /data:
    post:
      summary: Upload dataset
      consumes:
        - multipart/form-data
      description: |
        Uploads a dataset. Upon success, it returns the data id.
      parameters:
        - name: description
          in: formData
          description: >-
            An XML file describing the dataset. Only name, description, and data
            format are required. Also see the [XSD
            schema](https://www.openml.org/api/v1/xsd/openml.data.upload) and an
            [XML example](https://www.openml.org/api/v1/xml_example/data).
          required: true
          type: file
        - name: dataset
          in: formData
          description: 'The actual dataset, being an ARFF file.'
          required: true
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '130':
          description: >-
            Problem with file uploading. There was a problem with the file
            upload
        '131':
          description: >-
            Problem validating uploaded description file. The XML description
            format does not meet the standards
        '132':
          description: >-
            Failed to move the files. Internal server error, please contact API
            administrators
        '133':
          description: >-
            Failed to make checksum of datafile. Internal server error, please
            contact API administrators
        '134':
          description: >-
            Failed to insert record in database. Internal server error, please
            contact API administrators
        '135':
          description: Please provide description xml.
        '136':
          description: >-
            File failed format verification. The uploaded file is not valid
            according to the selected file format. Please check the file format
            specification and try again.
        '137':
          description: >-
            Please provide API key. In order to share content, please log in or
            provide your API key.
        '138':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact API administrators
        '139':
          description: >-
            Combination name / version already exists. Leave version out for
            auto increment
        '140':
          description: >-
            Both dataset file and dataset url provided. The system is confused
            since both a dataset file (post) and a dataset url (xml) are
            provided. Please remove one.
        '141':
          description: >-
            Neither dataset file or dataset url are provided. Please provide
            either a dataset file as POST variable, or a dataset url in the
            description XML
        '142':
          description: >-
            Error in processing arff file. Can be a syntax error, or the
            specified target feature does not exists. For now, we only check on
            arff files. If a dataset is claimed to be in such a format, and it
            can not be parsed, this error is returned.
        '143':
          description: >-
            Suggested target feature not legal. It is possible to suggest a
            default target feature (for predictive tasks). However, it should be
            provided in the data.
        '144':
          description: >-
            Unable to update dataset. The dataset with id could not be found in
            the database. If you upload a new dataset, unset the id.
        '200':
          description: Id of the uploaded dataset
          schema:
            type: object
            properties:
              upload_data_set:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the uploaded dataset, a positive integer'
          examples:
            application/json: |-
              {
                "upload_data_set": {
                  "id": "4328"
                }
              }
  '/data/features/{id}':
    get:
      summary: Get data features
      description: |
        Returns the features of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: All the features of the dataset
          schema:
            $ref: '#/definitions/DataFeatures'
          examples:
            application/json: |-
              {
                "data_features": {
                  "feature": [
                    {
                      "index": "0",
                      "name": "sepallength",
                      "data_type": "numeric",
                      "is_target": "false",
                      "is_ignore": "false",
                      "is_row_identifier": "false"
                    },
                    {
                      "index": "1",
                      "name": "sepalwidth",
                      "data_type": "numeric",
                      "is_target": "false",
                      "is_ignore": "false",
                      "is_row_identifier": "false"
                    },
                    {
                      "index": "2",
                      "name": "petallength",
                      "data_type": "numeric",
                      "is_target": "false",
                      "is_ignore": "false",
                      "is_row_identifier": "false"
                    },
                    {
                      "index": "3",
                      "name": "petalwidth",
                      "data_type": "numeric",
                      "is_target": "false",
                      "is_ignore": "false",
                      "is_row_identifier": "false"
                    },
                    {
                      "index": "4",
                      "name": "class",
                      "data_type": "nominal",
                      "is_target": "true",
                      "is_ignore": "false",
                      "is_row_identifier": "false"
                    }
                  ]
                }
              }
        '270':
          description: Please provide dataset ID.
        '271':
          description: >-
            Unknown dataset. Data set with the given data ID was not found (or
            is not shared with you).
        '272':
          description: >-
            No features found. The dataset did not contain any features, or we
            could not extract them.
        '273':
          description: >-
            Dataset not processed yet. The dataset was not processed yet,
            features are not yet available. Please wait for a few minutes.
        '274':
          description: >-
            Dataset processed with error. The feature extractor has run into an
            error while processing the dataset. Please check whether it is a
            valid supported file. If so, please contact the API admins.
  '/data/qualities/{id}':
    get:
      summary: Get data qualities
      description: |
        Returns the qualities of a dataset.
      parameters:
        - name: id
          in: path
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: All the qualities of the dataset
          schema:
            $ref: '#/definitions/DataQualities'
          examples:
            application/json: |-
              {
                "data_qualities": {
                  "quality": [
                    {
                      "name": "ClassCount",
                      "value": "3.0"
                    },
                    {
                      "name": "ClassEntropy",
                      "value": "1.584962500721156"
                    },
                    {
                      "name": "NumberOfClasses",
                      "value": "3"
                    },
                    {
                      "name": "NumberOfFeatures",
                      "value": "5"
                    },
                    {
                      "name": "NumberOfInstances",
                      "value": "150"
                    },
                    {
                      "name": "NumberOfInstancesWithMissingValues",
                      "value": "0"
                    },
                    {
                      "name": "NumberOfMissingValues",
                      "value": "0"
                    },
                    {
                      "name": "NumberOfNumericFeatures",
                      "value": "4"
                    },
                    {
                      "name": "NumberOfSymbolicFeatures",
                      "value": "0"
                    }
                  ]
                }
              }
        '360':
          description: Please provide data set ID
        '361':
          description: >-
            Unknown dataset. The data set with the given ID was not found in the
            database, or is not shared with you.
        '362':
          description: >-
            No qualities found. The registered dataset did not contain any
            calculated qualities.
        '363':
          description: >-
            Dataset not processed yet. The dataset was not processed yet, no
            qualities are available. Please wait for a few minutes.
        '364':
          description: >-
            Dataset processed with error. The quality calculator has run into an
            error while processing the dataset. Please check whether it is a
            valid supported file. If so, contact the support team.
        '365':
          description: >-
            Interval start or end illegal. There was a problem with the interval
            start or end.
  /data/list:
    get:
      summary: List all datasets
      description: |
        Returns an array with all datasets in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A list of datasets
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '370':
          description: No datasets available. There are no valid datasets in the system.
  '/data/list/limit/{limit}/offset/{offset}':
    get:
      summary: List datasets within a range.
      description: |
        Returns an array with a limited number of datasets.
      parameters:
        - name: limit
          in: path
          description: >-
            Optional, although required in this interface. The maximum number of
            datasets to return.  Without specifying an offset, it returns the
            first 'limit' datasets.
          required: true
          type: number
          format: integer
        - name: offset
          in: path
          description: >-
            Optional (although required in this interface). The offset to start
            from. With /limit/5/offset/10, datasets 11..15 will be returned
            (these are indices, not IDs). Is ignored when no limit is given.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A list of datasets
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '372':
          description: No datasets available. There are no valid datasets in the system.
  '/data/list/tag/{tag}':
    get:
      summary: List datasets with given tag.
      description: >
        Returns an array with all datasets in the system with the given tag. Can
        also be combined with limit and offset.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A list of datasets with the given tag
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '372':
          description: >-
            No datasets available. There are no datasets in the system with the given tag.
  '/data/list/status/{status}':
    get:
      summary: List datasets with given status
      description: >
        Returns an array with all datasets in the system with the given status,
        either 'active', 'deactivated', or 'in_preparation'.
      parameters:
        - name: status
          in: path
          description: >-
            The status on which to filter the results, either 'active',
            'deactivated', or 'in_preparation'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A list of datasets with the given status
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '372':
          description: >-
            No datasets available. There are no datasets in the system with the given status.
  '/data/list/{filters}':
    get:
      summary: Get datasets by properties
      description: >
        Get tasks based on properties of the data - number_instances,
        number_features, number_classes or number_missing_values. Properties can
        be combined, and ranges can be used in the form '0..10'. Can also be
        combined with limits or tags. Returns an array with all datasets in the
        system that match the constraints.
      parameters:
        - name: filters
          in: path
          description: >-
            Any combination of filters (data_id, data_name, number_instances,
            number_features, number_classes, number_missing_values) and
            corresponding values or ranges, e.g.
            'number_instances/0..50/number_features/0..10'. With or without
            limits, or tags.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: A list of datasets with the given task
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '372':
          description: >-
            No datasets available. There are no datasets in the system with the given constraints.
  /data/tag:
    post:
      summary: Tag a dataset
      description: Tags a dataset.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: The id of the tagged dataset
          schema:
            type: object
            properties:
              data_tag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the tagged dataset
          examples:
            application/json: |-
              {
                "data_tag": {
                  "id": "2"
                }
              }
        '470':
          description: >-
            In order to add a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '471':
          description: >-
            Entity not found. The provided entity_id {data_id, flow_id, run_id}
            does not correspond to an existing entity.
        '472':
          description: >-
            Entity already tagged by this tag. The entity {dataset, flow, run}
            already had this tag.
        '473':
          description: Something went wrong inserting the tag. Please contact OpenML Team.
        '474':
          description: Internal error tagging the entity. Please contact OpenML Team.
  /data/untag:
    post:
      summary: Untag a dataset
      description: Untags a dataset.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: data_id
          in: formData
          description: Id of the dataset.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - data
      responses:
        '200':
          description: The ID of the untagged dataset
          schema:
            type: object
            properties:
              data_untag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the untagged dataset
          examples:
            application/json: |-
              {
                "data_untag": {
                  "id": "2"
                }
              }
        '475':
          description: >-
            Please give entity_id {data_id, flow_id, run_id} and tag. In order
            to remove a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '476':
          description: >-
            Entity {dataset, flow, run} not found. The provided entity_id
            {data_id, flow_id, run_id} does not correspond to an existing
            entity.
        '477':
          description: >-
            Tag not found. The provided tag is not associated with the entity
            {dataset, flow, run}.
        '478':
          description: >-
            Tag is not owned by you. The entity {dataset, flow, run} was tagged
            by another user. Hence you cannot delete it.
        '479':
          description: Internal error removing the tag. Please contact OpenML Team.
  '/task/{id}':
    get:
      summary: Get task description
      description: >
        Returns information about a task. The information includes the task
        type, input data, train/test sets, and more.
      parameters:
        - name: id
          in: path
          description: ID of the task.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '150':
          description: Please provide task_id.
        '151':
          description: >-
            Unknown task. The task with the given id was not found in the
            database
        '200':
          description: A task description
          schema:
            $ref: '#/definitions/Task'
          examples:
            application/json: |-
              {
                "task": {
                  "task_id":"1",
                  "task_type":"Supervised Classification",
                  "input":[
                    {
                      "name":"source_data",
                      "data_set":{
                        "data_set_id":"1",
                        "target_feature":"class"
                      }
                    },
                    {
                      "name":"estimation_procedure",
                      "estimation_procedure":{
                        "type":"crossvalidation",
                        "data_splits_url":"https://www.openml.org/api_splits/get/1/Task_1_splits.arff",
                        "parameter":[
                          {
                            "name":"number_repeats",
                            "value":"1"
                          },
                          {
                            "name":"number_folds",
                            "value":"10"
                          },
                          {
                            "name":"percentage"
                          },
                          {
                            "name":"stratified_sampling",
                            "value":"true"
                          }
                        ]
                      }
                    },
                    {
                      "name":"cost_matrix",
                      "cost_matrix":[]
                    },
                    {
                      "name":"evaluation_measures",
                      "evaluation_measures":
                        {
                          "evaluation_measure":"predictive_accuracy"
                        }
                    }
                  ],
                  "output":{
                    "name":"predictions",
                    "predictions":{
                      "format":"ARFF",
                      "feature":[
                        {
                          "name":"repeat",
                          "type":"integer"
                        },
                        {
                          "name":"fold",
                          "type":"integer"
                        },
                        {
                          "name":"row_id",
                          "type":"integer"
                        },
                        {
                          "name":"confidence.classname",
                          "type":"numeric"
                        },
                        {
                          "name":"prediction",
                          "type":"string"
                        }
                      ]
                    }
                  },
                  "tag":["basic","study_1","under100k","under1m"]
                }
              }
    delete:
      summary: Delete task
      description: |
        Deletes a task. Upon success, it returns the ID of the deleted task.
      parameters:
        - name: id
          in: path
          description: Id of the task.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: ID of the deleted task
          schema:
            type: object
            properties:
              task_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the deleted task, a positive integer'
          examples:
            application/json: |-
              {
                "task_delete": {
                  "id": "4328"
                }
              }
        '450':
          description: >-
            Please provide API key. In order to remove your content, please
            authenticate.
        '451':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators.
        '452':
          description: >-
            Task does not exists. The task ID could not be linked to an existing
            task.
        '454':
          description: Task is executed in some runs. Delete these first.
        '455':
          description: Deleting the task failed. Please contact support team.
  /task:
    post:
      summary: Upload task
      consumes:
        - multipart/form-data
      description: |
        Uploads a task. Upon success, it returns the task id.
      parameters:
        - name: description
          in: formData
          description: >-
            An XML file describing the task. Only name, description, and task
            format are required. Also see the [XSD
            schema](https://www.openml.org/api/v1/xsd/openml.task.upload) and an
            [XML example](https://www.openml.org/api/v1/xml_example/task).
          required: true
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: Id of the uploaded task
          schema:
            type: object
            properties:
              upload_task:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the uploaded task, a positive integer'
          examples:
            application/json: |-
              {
                "upload_task": {
                  "id": "4328"
                }
              }
        '530':
          description: Description file not present. Please upload the task description.
        '531':
          description: Internal error. Please contact api support team
        '532':
          description: >-
            Problem validating uploaded description file. The XML description
            format does not meet the standards
        '533':
          description: Task already exists.
        '534':
          description: Error creating the task.
  /task/list:
    get:
      summary: List all tasks
      description: |
        Returns an array with all tasks in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/task/list/limit/{limit}/offset/{offset}':
    get:
      summary: List tasks within a range
      description: |
        Returns an array with a limited number of tasks.
      parameters:
        - name: limit
          in: path
          description: >-
            Optional, although required in this interface. The maximum number of
            tasks to return. Without specifying an offset, it returns the first
            'limit' tasks.
          required: true
          type: number
          format: integer
        - name: offset
          in: path
          description: >-
            Optional (although required in this interface). The offset to start
            from. With /limit/5/offset/10, tasks 11..15 will be returned (these
            are indices, not IDs). Is ignored when no limit is given.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/task/list/status/{status}':
    get:
      summary: List tasks with given status
      description: >
        Returns an array with all tasks in the system with the given status,
        either 'active', 'deactivated', or 'in_preparation'.
      parameters:
        - name: status
          in: path
          description: >-
            The status on which to filter the results, either 'active',
            'deactivated', or 'in_preparation'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks with the given status
          schema:
            $ref: '#/definitions/DataList'
          examples:
            application/json: |-
              {
                "data": {
                  "dataset": [
                    {
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize"
                          ,"value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                      ]
                    }
                  ]
                }
              }
        '482':
          description: >-
            No tasks available. There are no tasks in the system with the given status.
  '/task/list/type/{id}':
    get:
      summary: List tasks of given type.
      description: >
        Returns an array with all tasks for the given task type id (1 =
        Supervised Classification). Can be combined with limits and tags.
      parameters:
        - name: id
          in: path
          description: On which task type id to filter the results
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        '480':
          description: Please provide task type ID.
        '482':
          description: No results. There where no matches for the given task type ID.
  '/task/list/tag/{tag}':
    get:
      summary: List tasks with given tag
      description: >
        Returns an array with all tasks with the given tag. Can be combined with
        limits and other filters.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks with the given tag
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        '482':
          description: No results. There where no matches for the given task tag.
  '/task/list/data_tag/{tag}':
    get:
      summary: List tasks with the given data tag
      description: >
        Returns an array with all tasks where the underlying dataset has the
        given tag. Can be combined with limits and other filters.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks where the underlying dataset has the given tag
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        '482':
          description: No results. There where no matches for the given data tag.
  '/task/list/{filters}':
    get:
      summary: Get tasks by data properties
      description: >
        Get tasks based on properties of the underlying dataset - data_id,
        NumberOfInstances, NumberOfFeatures, NumberOfClasses or
        NumberOfMissingValues. Properties can be combined, and ranges can be
        used in the form '0..10'. Can also be combined with imits, tags, or
        types. Returns an array with all tasks in the system that match the
        constraints.
      parameters:
        - name: filters
          in: path
          description: >-
            Any combination of filters (data_id, NumberOfInstances,
            NumberOfFeatures, NumberOfClasses, NumberOfMissingValues) and
            corresponding values or ranges, e.g.
            'NumberOfInstances/0..50/NumberOfFeatures/0..10'. With or without
            limits, tags, or types.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A list of tasks with the given tag
          schema:
            $ref: '#/definitions/TaskList'
          examples:
            application/json: |-
              {
                "task": {
                  "task": [
                    {
                      "task_id":"1",
                      "task_type":"Supervised Classification",
                      "did":"1",
                      "name":"anneal",
                      "status":"active",
                      "format":"ARFF",
                      "input":[
                        {
                          "name":"estimation_procedure",
                          "value":"1"
                        },
                        {
                          "name":"evaluation_measures",
                          "value":"predictive_accuracy"
                        },
                        {
                          "name":"source_data",
                          "value":"1"
                        },
                        {
                          "name":"target_feature",
                          "value":"class"
                        }
                        ],
                      "quality":[
                        {
                          "name":"MajorityClassSize",
                          "value":"684"
                        },
                        {
                          "name":"MaxNominalAttDistinctValues",
                          "value":"10.0"
                        },
                        {
                          "name":"MinorityClassSize",
                          "value":"0"
                        },
                        {
                          "name":"NumBinaryAtts",
                          "value":"14.0"
                        },
                        {
                          "name":"NumberOfClasses",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfFeatures",
                          "value":"39"
                        },
                        {
                          "name":"NumberOfInstances",
                          "value":"898"
                        },
                        {
                          "name":"NumberOfInstancesWithMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfMissingValues",
                          "value":"0"
                        },
                        {
                          "name":"NumberOfNumericFeatures",
                          "value":"6"
                        },
                        {
                          "name":"NumberOfSymbolicFeatures",
                          "value":"32"
                        }
                        ],
                      "tag":[
                        "basic",
                        "study_1",
                        "study_7",
                        "under100k",
                        "under1m"
                      ]
                    }
                  ]
                }
              }
        '482':
          description: No results. There where no matches for the given constraints.
  /task/tag:
    post:
      summary: Tag a task
      description: Tags a task.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: task_id
          in: formData
          description: Id of the task.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: The id of the tagged task
          schema:
            type: object
            properties:
              task_tag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the tagged task
          examples:
            application/json: |-
              {
                "task_tag": {
                  "id": "2"
                }
              }
        '470':
          description: >-
            In order to add a tag, please upload the entity id (either data_id,
            task_id, flow_id, run_id) and tag (the name of the tag).
        '471':
          description: >-
            Entity not found. The provided entity_id {data_id, task_id, flow_id,
            run_id} does not correspond to an existing entity.
        '472':
          description: >-
            Entity already tagged by this tag. The entity {dataset, task, flow,
            run} already had this tag.
        '473':
          description: Something went wrong inserting the tag. Please contact OpenML Team.
        '474':
          description: Internal error tagging the entity. Please contact OpenML Team.
  /task/untag:
    post:
      summary: Untag a task
      description: Untags a task.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: task_id
          in: formData
          description: Id of the task.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - task
      responses:
        '200':
          description: A the features of the task
          schema:
            type: object
            properties:
              task_untag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the untagged task
          examples:
            application/json: |-
              {
                "task_untag": {
                  "id": "2"
                }
              }
        '475':
          description: >-
            Please give entity_id {data_id, flow_id, run_id} and tag. In order
            to remove a tag, please upload the entity id (either data_id,
            task_id, flow_id, run_id) and tag (the name of the tag).
        '476':
          description: >-
            Entity {dataset, task, flow, run} not found. The provided entity_id
            {data_id, task_id, flow_id, run_id} does not correspond to an
            existing entity.
        '477':
          description: >-
            Tag not found. The provided tag is not associated with the entity
            {dataset, task, flow, run}.
        '478':
          description: >-
            Tag is not owned by you. The entity {dataset, flow, run} was tagged
            by another user. Hence you cannot delete it.
        '479':
          description: Internal error removing the tag. Please contact OpenML Team.
  '/tasktype/{id}':
    get:
      summary: Get task type description
      description: >
        Returns information about a task type. The information includes a
        description, the given inputs and the expected outputs.
      parameters:
        - name: id
          in: path
          description: ID of the task.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - tasktype
      responses:
        '200':
          description: A task type description
          schema:
            $ref: '#/definitions/TaskType'
          examples:
            application/json: |-
              {
                "task_type":{
                  "id":"1",
                  "name":"Supervised Classification",
                  "description":"In supervised classification, you are given ...",
                  "contributor":["Joaquin Vanschoren","Jan van Rijn","Luis Torgo","Bernd Bischl"],
                  "date":"24-01-2013",
                  "input":[
                    {
                      "name":"source_data",
                      "data_set":
                        {
                          "data_set_id":"[INPUT:source_data]",
                          "target_feature":"[INPUT:target_feature]"
                        }
                    },
                    {
                      "name":"estimation_procedure",
                      "estimation_procedure":
                      {
                        "type":"[LOOKUP:estimation_procedure.type]",
                        "data_splits_url":"splits.arff",
                        "parameter":[
                          {
                            "name":"number_repeats",
                            "value":"[LOOKUP:estimation_procedure.repeats]"
                          },
                          {
                            "name":"number_folds",
                            "value":"[LOOKUP:estimation_procedure.folds]"
                          },
                          {
                            "name":"percentage",
                            "value":"[LOOKUP:estimation_procedure.percentage]"
                          },
                          {
                            "name":"stratified_sampling",
                            "value":"[LOOKUP:estimation_procedure.stratified_sampling]"
                          }
                        ]
                      }
                    },
                    {
                      "name":"cost_matrix",
                      "cost_matrix":"[INPUT:cost_matrix]"
                    },
                    {
                      "name":"evaluation_measures",
                      "evaluation_measures": {
                        "evaluation_measure":"[INPUT:evaluation_measures]"
                        }
                    }
                  ],
                  "output":{
                    "name":"predictions",
                    "predictions":{
                      "format":"ARFF",
                      "feature":[
                        {
                          "name":"repeat",
                          "type":"integer"
                        },
                        {
                          "name":"fold",
                          "type":"integer"
                        },
                        {
                          "name":"row_id",
                          "type":"integer"
                        },
                        {
                          "name":"confidence.classname",
                          "type":"numeric"
                        },
                        {
                          "name":"prediction",
                          "type":"string"
                        }
                      ]
                    }
                  }
                }
              }
        '240':
          description: Please provide task type ID.
        '241':
          description: >-
            Unknown task type. The task type with the given id was not found in
            the database
  /tasktype/list:
    get:
      summary: List all task types
      description: |
        Returns an array with all task types in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - tasktype
      responses:
        '200':
          description: A task description
          schema:
            $ref: '#/definitions/TaskTypeList'
          examples:
            application/json: |-
              {
                "task_types":{
                  "task_type":[
                    {
                      "id":"1",
                      "name":"Supervised Classification",
                      "description":"In supervised classification, you are given ...",
                      "creator":"Joaquin Vanschoren, Jan van Rijn, Luis Torgo, Bernd Bischl"
                    },
                    {
                      "id":"2",
                      "name":"Supervised Regression",
                      "description":"Given a dataset with a numeric target ...",
                      "creator":"Joaquin Vanschoren, Jan van Rijn, Luis Torgo, Bernd Bischl"
                    },{}
                  ]
                }
              }
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/flow/{id}':
    get:
      summary: Get flow description
      description: >
        Returns information about a flow. The information includes the name,
        information about the creator, dependencies, parameters, run
        instructions and more.
      parameters:
        - name: id
          in: path
          description: ID of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '180':
          description: Please provide flow id.
        '181':
          description: >-
            Unknown flow. The flow with the given ID was not found in the
            database.
        '200':
          description: A flow description
          schema:
            $ref: '#/definitions/Flow'
          examples:
            application/json: |-
              {
                "flow": {
                  "id":"100",
                  "uploader":"1",
                  "name":"weka.J48",
                  "version":"2",
                  "external_version":"Weka_3.7.5_9117",
                  "description":"...",
                  "upload_date":"2014-04-23 18:00:36",
                  "language":"Java",
                  "dependencies":"Weka_3.7.5",
                  "parameter": [
                    {
                      "name":"A",
                      "data_type":"flag",
                      "default_value":[],
                      "description":"Laplace smoothing..."
                    },
                    {
                      "name":"C",
                      "data_type":"option",
                      "default_value":"0.25",
                      "description":"Set confidence threshold..."
                    }
                  ]
                }
              }
    delete:
      summary: Delete a flow
      description: |
        Deletes a flow. Upon success, it returns the ID of the deleted flow.
      parameters:
        - name: id
          in: path
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: ID of the deleted flow
          schema:
            type: object
            properties:
              flow_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the deleted flow, a positive integer'
          examples:
            application/json: |-
              {
                "flow_delete": {
                  "id": "4328"
                }
              }
        '320':
          description: >-
            Please provide API key. In order to remove your content, please
            authenticate.
        '321':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators .
        '322':
          description: >-
            Flow does not exists. The flow ID could not be linked to an existing
            flow.
        '323':
          description: >-
            Flow is not owned by you. The flow is owned by another user. Hence
            you cannot delete it.
        '324':
          description: >-
            Flow is in use by other content. Can not be deleted. The flow is
            used in runs, evaluations or as a component of another flow. Delete
            other content before deleting thisflow.
        '325':
          description: >-
            Deleting flow failed. Deleting the flow failed. Please contact
            support team.
  /flow:
    post:
      summary: Upload a flow
      consumes:
        - multipart/form-data
      description: |
        Uploads a flow. Upon success, it returns the flow id.
      parameters:
        - name: description
          in: formData
          description: >-
            An XML file describing the flow. Only name and description are
            required. Also see the [XSD
            schema](https://www.openml.org/api/v1/xsd/openml.implementation.upload)
            and an [XML
            example](https://www.openml.org/api/v1/xml_example/flow).
          required: true
          type: file
        - name: flow
          in: formData
          description: 'The actual flow, being a source (or binary) file.'
          required: false
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '160':
          description: Error in file uploading. There was a problem with the file upload.
        '161':
          description: Please provide description xml.
        '163':
          description: >-
            Problem validating uploaded description file. The XML description
            format does not meet the standards.
        '164':
          description: >-
            Flow already stored in database. Please change name or version
            number
        '165':
          description: >-
            Failed to insert flow. There can be many causes for this error. If
            you included the implements field, it should be an existing entry in
            the algorithm or math_function table. Otherwise it could be an
            internal server error. Please contact API support team.
        '166':
          description: >-
            Failed to add flow to database. Internal server error, please
            contact API administrators
        '167':
          description: Illegal files uploaded. An non required file was uploaded.
        '168':
          description: >-
            The provided md5 hash equals not the server generated md5 hash of
            the file.
        '169':
          description: >-
            Please provide API key. In order to share content, please
            authenticate and provide API key.
        '170':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact API administrators
        '171':
          description: Flow already exists. This flow is already in the database
        '172':
          description: XSD not found. Please contact API support team
        '200':
          description: Id of the uploaded flow
          schema:
            type: object
            properties:
              upload_flow:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the uploaded flow, a positive integer'
          examples:
            application/json: |-
              {
                "upload_flow": {
                  "id": "2520"
                }
              }
  '/flow/exists/{name}/{version}':
    get:
      summary: Check whether flow exists
      description: |
        Checks whether a flow with the given name and (external) version exists.
      parameters:
        - name: name
          in: path
          description: The name of the flow.
          required: true
          type: string
        - name: version
          in: path
          description: The external version of the flow
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            type: object
            properties:
              flow_exists:
                type: object
                properties:
                  exists:
                    type: string
                    description: true or false
                  id:
                    type: string
                    description: >-
                      The id of the flow with the given name and (external)
                      version
          examples:
            application/json: |-
              {
                "flow_exists": {
                  "exists": "true",
                  "id": "65"
                }
              }
        '330':
          description: >-
            Mandatory fields not present. Please provide name and
            external_version.
  /flow/list:
    get:
      summary: List all flows
      description: |
        Returns an array with all flows in the system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            $ref: '#/definitions/FlowList'
          examples:
            application/json: |-
              {
                "flows":
                  {
                    "flow":[
                      {
                        "id":"65",
                        "full_name":"weka.RandomForest(1)",
                        "name":"weka.RandomForest",
                        "version":"1",
                        "external_version":"Weka_3.7.10_9186",
                        "uploader":"1"
                      },
                      {
                        "id":"66",
                        "full_name":"weka.IBk(1)",
                        "name":"weka.IBk",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      },
                      {
                        "id":"67",
                        "full_name":"weka.BayesNet_K2(1)",
                        "name":"weka.BayesNet_K2",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      }
                    ]
                  }
                }
        '500':
          description: There where no results.
  '/flow/list/limit/{limit}/offset/{offset}':
    get:
      summary: List flows within a range
      description: |
        Returns an array with the requested flows.
      parameters:
        - name: limit
          in: path
          description: >-
            Optional, although required in this interface. The maximum number of
            flows to return.  Without specifying an offset, it returns the first
            'limit' flows.
          required: true
          type: number
          format: integer
        - name: offset
          in: path
          description: >-
            Optional (although required in this interface). The offset to start
            from. With /limit/5/offset/10, flows 11..15 will be returned (these
            are indices, not IDs). Is ignored when no limit is given.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            $ref: '#/definitions/FlowList'
          examples:
            application/json: |-
              {
                "flows":
                  {
                    "flow":[
                      {
                        "id":"65",
                        "full_name":"weka.RandomForest(1)",
                        "name":"weka.RandomForest",
                        "version":"1",
                        "external_version":"Weka_3.7.10_9186",
                        "uploader":"1"
                      },
                      {
                        "id":"66",
                        "full_name":"weka.IBk(1)",
                        "name":"weka.IBk",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      },
                      {
                        "id":"67",
                        "full_name":"weka.BayesNet_K2(1)",
                        "name":"weka.BayesNet_K2",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      }
                    ]
                  }
                }
        '500':
          description: There where no results.
  '/flow/list/tag/{tag}':
    get:
      summary: List flows with given tag.
      description: |
        Returns an array with all flows in the system with the given tag.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows with the given tag
          schema:
            $ref: '#/definitions/FlowList'
          examples:
            application/json: |-
              {
                "flows":
                  {
                    "flow":[
                      {
                        "id":"65",
                        "full_name":"weka.RandomForest(1)",
                        "name":"weka.RandomForest",
                        "version":"1",
                        "external_version":"Weka_3.7.10_9186",
                        "uploader":"1"
                      },
                      {
                        "id":"66",
                        "full_name":"weka.IBk(1)",
                        "name":"weka.IBk",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      },
                      {
                        "id":"67",
                        "full_name":"weka.BayesNet_K2(1)",
                        "name":"weka.BayesNet_K2",
                        "version":"1",
                        "external_version":"Weka_3.7.10_8034",
                        "uploader":"1"
                      }
                    ]
                  }
                }
        '500':
          description: There where no results.
  /flow/owned:
    get:
      summary: List flows owned by you
      description: |
        Returns an array with all flows owned by you.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: A list of flows
          schema:
            type: object
            properties:
              flow_owned:
                type: object
                properties:
                  id:
                    type: array
                    items:
                      type: string
          examples:
            application/json: |-
              {
                "flow_owned": {
                  "id": [
                    "111",
                    "112",
                    "113",
                    "114",
                    "115",
                    "116",
                    "117"
                  ]
                }
              }
        '310':
          description: Please provide API key to authenticate.
        '311':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators.
        '312':
          description: No flows owned by you.
  /flow/tag:
    post:
      summary: Tag a flow
      description: Tags a flow.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the tagged flow
          schema:
            type: object
            properties:
              flow_tag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the tagged flow
          examples:
            application/json: |-
              {
                "flow_tag": {
                  "id": "2"
                }
              }
        '470':
          description: >-
            In order to add a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '471':
          description: >-
            Entity not found. The provided entity_id {data_id, flow_id, run_id}
            does not correspond to an existing entity.
        '472':
          description: >-
            Entity already tagged by this tag. The entity {dataset, flow, run}
            already had this tag.
        '473':
          description: Something went wrong inserting the tag. Please contact OpenML Team.
        '474':
          description: Internal error tagging the entity. Please contact OpenML Team.
  /flow/untag:
    post:
      summary: Untag a flow
      description: Untags a flow.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: flow_id
          in: formData
          description: Id of the flow.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - flow
      responses:
        '200':
          description: The id of the untagged flow
          schema:
            type: object
            properties:
              flow_untag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the untagged flow
          examples:
            application/json: |-
              {
                "flow_untag": {
                  "id": "2"
                }
              }
        '475':
          description: >-
            Please give entity_id {data_id, flow_id, run_id} and tag. In order
            to remove a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '476':
          description: >-
            Entity {dataset, flow, run} not found. The provided entity_id
            {data_id, flow_id, run_id} does not correspond to an existing
            entity.
        '477':
          description: >-
            Tag not found. The provided tag is not associated with the entity
            {dataset, flow, run}.
        '478':
          description: >-
            Tag is not owned by you. The entity {dataset, flow, run} was tagged
            by another user. Hence you cannot delete it.
        '479':
          description: Internal error removing the tag. Please contact OpenML Team.
  '/setup/{id}':
    get:
      summary: Get a hyperparameter setup
      description: >
        Returns information about a setup. The information includes the list of
        hyperparameters, with name, value, and default value.
      parameters:
        - name: id
          in: path
          description: >-
            ID of the hyperparameter setup (configuration). These IDs are stated
            in run descriptions.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - setup
      responses:
        '200':
          description: A setup description
          schema:
            $ref: '#/definitions/Setup'
          examples:
            application/json: |-
              {
                "setup_parameters":{
                  "flow_id":"59",
                  "parameter":[
                    {
                      "full_name":"weka.JRip(1)_F",
                      "parameter_name":"F",
                      "data_type":"option",
                      "default_value":"3",
                      "value":"3"
                    },{
                      "full_name":"weka.JRip(1)_N",
                      "parameter_name":"N",
                      "data_type":"option",
                      "default_value":"2.0",
                      "value":"2.0"
                    },{
                      "full_name":"weka.JRip(1)_O",
                      "parameter_name":"O",
                      "data_type":"option",
                      "default_value":"2",
                      "value":"2"
                    },{
                      "full_name":"weka.JRip(1)_S",
                      "parameter_name":"S",
                      "data_type":"option",
                      "default_value":"1",
                      "value":"1"
                    }]
                }
              }
        '280':
          description: >-
            Please provide setup ID. In order to view setup details, please
            provide the run ID
        '281':
          description: >-
            Setup not found. The setup ID was invalid, or setup does not exist
            (anymore).
  '/run/{id}':
    get:
      summary: Get run description
      description: >
        Returns information about a run. The information includes the name,
        information about the creator, dependencies, parameters, run
        instructions and more.
      parameters:
        - name: id
          in: path
          description: ID of the run.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A run description
          schema:
            $ref: '#/definitions/Run'
          examples:
            application/json: |-
              {
                "run": {
                  "run_id":"100",
                  "uploader":"1",
                  "uploader_name":"Jan van Rijn",
                  "task_id":"28",
                  "task_type":"Supervised Classification",
                  "task_evaluation_measure":"predictive_accuracy",
                  "flow_id":"67",
                  "flow_name":"weka.BayesNet_K2(1)",
                  "setup_string":"weka.classifiers.bayes.BayesNet -- -D -Q weka.classifiers.bayes.net.search.local.K2 -- -P 1 -S BAYES -E weka.classifiers.bayes.net.estimate.SimpleEstimator -- -A 0.5",
                  "parameter_setting": [
                    {
                      "name":"D",
                      "value":"true"
                    },
                    {
                      "name":"Q",
                      "value":"weka.classifiers.bayes.net.search.local.K2"
                    },
                    {
                      "name":"P",
                      "value":"1"
                    },
                    {
                      "name":"S",
                      "value":"BAYES"
                    }
                  ],
                  "input_data":
                    {
                      "dataset":
                        {
                          "did":"28",
                          "name":"optdigits",
                          "url":"https:\/\/www.openml.org\/data\/download\/28\/dataset_28_optdigits.arff"
                        }
                    },
                  "output_data":
                    {
                      "file": [
                        {
                          "did":"48838",
                          "file_id":"261",
                          "name":"description",
                          "url":"https:\/\/www.openml.org\/data\/download\/261\/weka_generated_run935374685998857626.xml"
                        },
                        {
                          "did":"48839",
                          "file_id":"262",
                          "name":"predictions",
                          "url":"https:\/\/www.openml.org\/data\/download\/262\/weka_generated_predictions576954524972002741.arff"
                        }
                      ],
                      "evaluation": [
                        {
                          "name":"area_under_roc_curve",
                          "flow_id":"4",
                          "value":"0.990288",
                          "array_data":"[0.99724,0.989212,0.992776,0.994279,0.980578,0.98649,0.99422,0.99727,0.994858,0.976143]"
                        },
                        {
                          "name":"confusion_matrix",
                          "flow_id":"10",
                          "array_data":"[[544,1,0,0,7,0,1,0,0,1],[0,511,21,1,0,1,3,1,5,28],[0,7,511,1,0,1,0,3,23,11],[0,2,2,519,0,3,0,12,16,18],[0,3,0,0,528,0,4,21,6,6],[0,1,0,7,5,488,2,0,4,51],[1,7,0,0,2,0,548,0,0,0],[0,2,0,1,9,1,0,545,4,4],[1,25,2,2,3,6,2,1,503,9],[0,7,0,20,16,5,0,19,9,486]]"
                        },
                        {
                          "name":"f_measure",
                          "flow_id":"12",
                          "value":"0.922723",
                          "array_data":"[0.989091,0.898857,0.935041,0.92431,0.927944,0.918156,0.980322,0.933219,0.895018,0.826531]"
                        },
                        {
                          "name":"kappa",
                          "flow_id":"13",
                          "value":"0.913601"
                        }
                      ]
                    }
                }
              }
        '220':
          description: >-
            Please provide run ID. In order to view run details, please provide
            the run ID
        '221':
          description: 'Run not found. The run ID was invalid, run does not exist (anymore).'
    delete:
      summary: Delete run
      description: |
        Deletes a run. Upon success, it returns the ID of the deleted run.
      parameters:
        - name: id
          in: path
          description: Id of the run.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: ID of the deleted run
          schema:
            type: object
            properties:
              data_delete:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the deleted run, a positive integer'
          examples:
            application/json: |-
              {
                "run_delete": {
                  "id": "2520"
                }
              }
        '390':
          description: >-
            Please provide API key. In order to remove your content, please
            authenticate.
        '391':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators
        '392':
          description: >-
            Run does not exists. The run ID could not be linked to an existing
            run.
        '393':
          description: >-
            Run is not owned by you. The run was owned by another user. Hence
            you cannot delete it.
        '394':
          description: >-
            Deleting run failed. Deleting the run failed. Please contact support
            team.
  /run:
    post:
      summary: Upload run
      consumes:
        - multipart/form-data
      description: |
        Uploads a run. Upon success, it returns the run id.
      parameters:
        - name: description
          in: formData
          description: >-
            An XML file describing the dataset. Only name, description, and data
            format are required. Also see the [XSD
            schema](https://www.openml.org/api/v1/xsd/openml.run.upload) and an
            [XML example](https://www.openml.org/api/v1/xml_example/run).
          required: true
          type: file
        - name: predictions
          in: formData
          description: The predictions generated by the run
          required: true
          type: file
        - name: model_readable
          in: formData
          description: The human-readable model generated by the run
          required: false
          type: file
        - name: model_serialized
          in: formData
          description: The serialized model generated by the run
          required: false
          type: file
        - name: api_key
          in: query
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: Id of the uploaded run
          schema:
            type: object
            properties:
              upload_flow:
                type: object
                properties:
                  id:
                    type: string
                    description: 'ID of the uploaded run, a positive integer'
          examples:
            application/json: |-
              {
                "upload_run": {
                  "id": "2520"
                }
              }
        '201':
          description: >-
            Authentication failed. The API key was not valid. Please try to
            login again, or contact api administrators.
        '202':
          description: Please provide run XML.
        '203':
          description: >-
            Could not validate run xml by XSD. Please double check that the xml
            is valid.
        '204':
          description: >-
            Unknown task. The task with the given ID was not found in the
            database.
        '205':
          description: >-
            Unknown flow. The flow with the given ID was not found in the
            database.
        '206':
          description: >-
            Invalid number of files. The number of uploaded files did not match
            the number of files expected for the task type
        '207':
          description: File upload failed. One of the files uploaded has a problem.
        '208':
          description: Error inserting setup record. Please contact api administrators
        '210':
          description: Unable to store run. Please contact api administrators.
        '211':
          description: >-
            Dataset not in database. One of the datasets of the task was not
            included in database, please contact api administrators.
        '212':
          description: Unable to store file. Please contact api administrators.
        '213':
          description: >-
            Parameter in run xml unknown. One of the parameters provided in the
            run xml is not registered as parameter for the flow nor its
            components.
        '214':
          description: Unable to store input setting. Please contact API support team.
        '215':
          description: Unable to evaluate predictions. Please contact API support team.
        '216':
          description: >-
            Error thrown by Java Application. Additional information field is
            provided.
        '217':
          description: >-
            Error processing output data. Unknown or inconsistent evaluation
            measure. One of the provided evaluation measures could not be
            matched with a record in the math_function or flow table.
        '218':
          description: >-
            Wrong flow associated with run. The flow implements a math_function,
            which is unable to generate predictions. Please select another flow.
        '219':
          description: >-
            Error reading the XML document. The XML description file could not
            be verified.
  '/run/list/limit/{limit}/offset/{offset}':
    get:
      summary: Get runs by limit/offset
      description: |
        Returns an array with all runs matching the given limit and offset.
      parameters:
        - name: limit
          in: path
          description: >-
            The maximum number of runs to return.  Without specifying an offset,
            it returns the first 'limit' runs.
          required: true
          type: number
          format: integer
        - name: offset
          in: path
          description: >-
            Optional (although required in this interface). The offset to start
            from. With /limit/5/offset/10, runs 11..15 will be returned (these
            are indices, not IDs). Is ignored when no limit is given.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '100'
                    task_id: '28'
                    setup_id: '12'
                    flow_id: '67'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '101'
                    task_id: '48'
                    setup_id: '6'
                    flow_id: '61'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '102'
                    task_id: '41'
                    setup_id: '3'
                    flow_id: '58'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/run/{ids}':
    get:
      summary: Get runs by id(s)
      description: |
        Returns an array with all runs matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of run IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '100'
                    task_id: '28'
                    setup_id: '12'
                    flow_id: '67'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '101'
                    task_id: '48'
                    setup_id: '6'
                    flow_id: '61'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '102'
                    task_id: '41'
                    setup_id: '3'
                    flow_id: '58'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/tag/{tag}':
    get:
      summary: Get runs by tag
      description: |
        Returns an array with all runs matching the given tag.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs with the given tag
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '100'
                    task_id: '28'
                    setup_id: '12'
                    flow_id: '67'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '101'
                    task_id: '48'
                    setup_id: '6'
                    flow_id: '61'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '102'
                    task_id: '41'
                    setup_id: '3'
                    flow_id: '58'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, tag, flow or setup, uploader or run,
            to filter results, or limit the number of responses. The number of
            runs is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id, tag) did not meet the constraints (comma
            separated list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/task/{ids}':
    get:
      summary: Get runs by task(s)
      description: |
        Returns an array with all runs belonging to one of the given task(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of task IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '142564'
                    task_id: '1'
                    setup_id: '829'
                    flow_id: '362'
                    uploader: '212'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '249273'
                    task_id: '1'
                    setup_id: '829'
                    flow_id: '362'
                    uploader: '348'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '249280'
                    task_id: '1'
                    setup_id: '829'
                    flow_id: '362'
                    uploader: '348'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/uploader/{ids}':
    get:
      summary: Get runs by uploader(s)
      description: |
        Returns an array with all runs uploaded by one of the given user(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of user IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '45015'
                    task_id: '1'
                    setup_id: '1225'
                    flow_id: '673'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '45016'
                    task_id: '1'
                    setup_id: '1225'
                    flow_id: '673'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '54729'
                    task_id: '1'
                    setup_id: '1468'
                    flow_id: '707'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/flow/{ids}':
    get:
      summary: Get runs by flow(s)
      description: |
        Returns an array with all runs generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of user IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '413'
                    task_id: '1'
                    setup_id: '10'
                    flow_id: '65'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '6253'
                    task_id: '1'
                    setup_id: '10'
                    flow_id: '65'
                    uploader: '17'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '10451'
                    task_id: '1'
                    setup_id: '79'
                    flow_id: '65'
                    uploader: '17'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  '/run/list/{filters}':
    get:
      summary: 'Get runs by limit, id, task, uploader and/or flow'
      description: >
        Returns an array with all runs matching any or all of the given filters.
        You can combine any of the above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: >-
            Any combination of filters (run,task,uploader and/or flow) and
            corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or
            'task/1,2,3/flow/1,2'. With or without limit.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: A list of runs descriptions
          schema:
            $ref: '#/definitions/RunList'
          examples:
            application/json:
              runs:
                run:
                  - run_id: '100'
                    task_id: '28'
                    setup_id: '12'
                    flow_id: '67'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '101'
                    task_id: '48'
                    setup_id: '6'
                    flow_id: '61'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
                  - run_id: '102'
                    task_id: '41'
                    setup_id: '3'
                    flow_id: '58'
                    uploader: '1'
                    upload_time: '2014-04-06 23:30:40'
                    error_message: []
        '510':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses. The number of runs
            is huge. Please limit the result space.
        '511':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '512':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '513':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add more filters.
  /run/tag:
    post:
      summary: Tag a run
      description: Tags a run.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: run_id
          in: formData
          description: Id of the run.
          required: true
          type: number
          format: integer
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: The id of the tagged run
          schema:
            type: object
            properties:
              run_tag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the tagged run
          examples:
            application/json: |-
              {
                "run_tag": {
                  "id": "2"
                }
              }
        '470':
          description: >-
            In order to add a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '471':
          description: >-
            Entity not found. The provided entity_id {data_id, flow_id, run_id}
            does not correspond to an existing entity.
        '472':
          description: >-
            Entity already tagged by this tag. The entity {dataset, flow, run}
            already had this tag.
        '473':
          description: Something went wrong inserting the tag. Please contact OpenML Team.
        '474':
          description: Internal error tagging the entity. Please contact OpenML Team.
  /run/untag:
    post:
      summary: Untag a run
      description: Untags a run.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: run_id
          in: formData
          description: Id of the run.
          required: true
          type: number
        - name: tag
          in: formData
          description: Tag name
          required: true
          type: string
        - name: api_key
          in: formData
          description: Api key to authenticate the user
          required: true
          type: string
      tags:
        - run
      responses:
        '200':
          description: The id of the untagged run
          schema:
            type: object
            properties:
              run_untag:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the untagged run
          examples:
            application/json: |-
              {
                "run_untag": {
                  "id": "2"
                }
              }
        '475':
          description: >-
            Please give entity_id {data_id, flow_id, run_id} and tag. In order
            to remove a tag, please upload the entity id (either data_id,
            flow_id, run_id) and tag (the name of the tag).
        '476':
          description: >-
            Entity {dataset, flow, run} not found. The provided entity_id
            {data_id, flow_id, run_id} does not correspond to an existing
            entity.
        '477':
          description: >-
            Tag not found. The provided tag is not associated with the entity
            {dataset, flow, run}.
        '478':
          description: >-
            Tag is not owned by you. The entity {dataset, flow, run} was tagged
            by another user. Hence you cannot delete it.
        '479':
          description: Internal error removing the tag. Please contact OpenML Team.
  '/evaluation/list/run/{ids}':
    get:
      summary: Get evaluations by run id(s)
      description: |
        Returns an array with all evaluations matching the given run id(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of run IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/limit/{limit}/offset/{offset}':
    get:
      summary: Get evaluations by limit/offset
      description: |
        Returns an array with all evaluations matching the given limit/offset.
      parameters:
        - name: limit
          in: path
          description: >-
            The maximum number of datasets to return. Without specifying an
            offset, it returns the first 'limit' evaluations.
          required: true
          type: number
          format: integer
        - name: offset
          in: path
          description: >-
            Optional (although required in this interface). The offset to start
            from. With /limit/5/offset/10, evaluations 11..15 will be returned
            (these are indices, not IDs). Is ignored when no limit is given.
          required: true
          type: number
          format: integer
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations with the given limit/offset
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, tag, flow or setup, uploader or run,
            to filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (tag, task_id, setup_id,
            flow_id, run_id, uploader_id) did not meet the constraints (comma
            separated list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/tag/{tag}':
    get:
      summary: Get evaluations by tag
      description: |
        Returns an array with all evaluations matching the given tag.
      parameters:
        - name: tag
          in: path
          description: The tag on which to filter the results.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations with the given tag
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, tag, flow or setup, uploader or run,
            to filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (tag, task_id, setup_id,
            flow_id, run_id, uploader_id) did not meet the constraints (comma
            separated list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/task/{ids}':
    get:
      summary: Get evaluations by task(s)
      description: >
        Returns an array with all evaluations belonging to one of the given
        task(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of task IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/uploader/{ids}':
    get:
      summary: Get evaluations by uploader(s)
      description: >
        Returns an array with all evaluations uploaded by one of the given
        user(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of user IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluation descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/flow/{ids}':
    get:
      summary: Get evaluations by flow(s)
      description: |
        Returns an array with all evaluations generated by the given flow(s).
      parameters:
        - name: ids
          in: path
          description: 'Comma-separated list of user IDs, e.g. ''1,2,3''.'
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/function/{name}':
    get:
      summary: Get evaluations for a specific evaluation method
      description: >
        Returns an array with all evaluations using the given function. Can be
        combined with all other filters.
      parameters:
        - name: name
          in: path
          description: >-
            Name of the evaluation measure, e.g. area_under_auc or
            predictive_accuracy. See the OpenML website for the complete list of
            measures.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '2'
                    task_id: '69'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-07 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '3'
                    task_id: '70'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-08 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  '/evaluation/list/{filters}':
    get:
      summary: >-
        Get evaluations by run, task, uploader, function, and or flow (with or
        without limit)
      description: >
        Returns an array with all evaluations matching any or all of the given
        filters. You can combine any of the four above filters any way you want.
      parameters:
        - name: filters
          in: path
          description: >-
            Any combination of filters (limit,run,task,uploader and/or flow) and
            corresponding comma-separated IDs, e.g. 'run/1,2,3/uploader/1' or
            'task/1,2,3/flow/1,2'.
          required: true
          type: string
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - evaluation
      responses:
        '200':
          description: A list of evaluations descriptions
          schema:
            $ref: '#/definitions/EvaluationList'
          examples:
            application/json:
              evaluations:
                evaluation:
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: area_under_roc_curve
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.839359'
                    array_data: '[0,0.99113,0.898048,0.874862,0.791282,0.807343,0.820674]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: f_measure
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.600026'
                    array_data: '[0,0,0.711934,0.735714,0.601363,0.435678,0.430913]'
                  - run_id: '1'
                    task_id: '68'
                    flow_id: '61'
                    function: predictive_accuracy
                    upload_time: '2014-04-06 23:30:40'
                    value: '0.614634'
                    array_data: []
        '540':
          description: >-
            Please provide at least task, flow or setup, uploader or run, to
            filter results, or limit the number of responses.
        '541':
          description: >-
            Input not safe. The input parameters (task_id, setup_id, flow_id,
            run_id, uploader_id) did not meet the constraints (comma separated
            list of integers).
        '542':
          description: >-
            There where no results. Check whether there are runs under the given
            constraint.
        '543':
          description: >-
            Too many results. Given the constraints, there were still too many
            results. Please add filters to narrow down the list.
  /estimationprocedure/list:
    get:
      summary: List all estimation procedures
      description: >
        Returns an array with all model performance estimation procedures in the
        system.
      parameters:
        - name: api_key
          in: query
          description: API key to authenticate the user
          required: true
          type: string
      tags:
        - estimationprocedure
      responses:
        '200':
          description: A list of estimation procedures
          schema:
            $ref: '#/definitions/EstimationProcedureList'
          examples:
            application/json: |-
              {
                "estimationprocedures": {
                  "estimationprocedure": [
                    {
                       "id":"1",
                       "ttid":"1",
                       "name":"10-fold Crossvalidation",
                       "type":"crossvalidation",
                       "repeats":"1",
                       "folds":"10",
                       "stratified_sampling":"true"
                    },
                    {
                      "id":"2",
                      "ttid":"1",
                      "name":"5 times 2-fold Crossvalidation",
                      "type":"crossvalidation",
                      "repeats":"5",
                      "folds":"2",
                      "stratified_sampling":"true"
                    }
                  ]
                }
              }
        '500':
          description: No model performance estimation procedures available.
definitions:
  Flow:
    type: object
    properties:
      flow_description:
        type: object
        properties:
          id:
            type: string
            description: 'ID of the flow, a positive integer'
          uploader:
            type: string
            description: The uploader of the flow
          name:
            type: string
            description: The name of the flow
          version:
            type: string
            description: 'The version of the flow, set by OpenML. A positive integer'
          version_label:
            type: string
            description: >-
              The version of the flow, as defined by the uploader, for
              reference. Can be any format as long as it is unique.
          description:
            type: string
            description: 'Wiki description of the flow, in (Git flavoured) markdown format'
          upload_date:
            type: string
            description: >-
              The datetime that the flow was uploaded, format yyyy-MM-dd
              HH:mm:ss
          language:
            type: string
            description: The programming language the flow is written in.
          dependencies:
            type: string
            description: >-
              The libraries that this flow depends on, and their version
              numbers.
          tag:
            type: array
            items:
              type: string
            description: >-
              Tags added by OpenML users. Includes study tags in the form
              `study_1`
          parameter:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the parameter
                data_type:
                  type: string
                  description: The data type of the parameter
                default_value:
                  type: string
                  description: The default value of the parameter
                description:
                  type: string
                  description: A description of the parameter
  FlowList:
    type: object
    properties:
      flows:
        type: object
        properties:
          flow:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The flow ID
                full_name:
                  type: string
                  description: The full flow name (name + internal version number)
                name:
                  type: string
                  description: The flow name
                version:
                  type: string
                  description: The internal flow version
                external_version:
                  type: string
                  description: The external flow version
                uploader:
                  type: string
                  description: The ID of the person who uploaded the flow
  Task:
    type: object
    properties:
      task_description:
        type: object
        properties:
          task_id:
            type: string
            description: 'ID of the task, a positive integer'
          task_type:
            type: string
            description: 'The type of the task, e.g. Supervised Classification'
          input:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the input, e.g. source_data'
                data_set:
                  type: object
                  properties:
                    data_set_id:
                      type: string
                      description: The id of the dataset
                    target_feature:
                      type: string
                      description: The name of the target feature for this task
                estimation_procedure:
                  type: object
                  properties:
                    type:
                      type: string
                      description: 'The type of procedure, e.g. crossvalidation'
                    data_splits_url:
                      type: string
                      description: The url where the data splits can be downloaded
                    parameter:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the parameter
                          value:
                            type: string
                            description: The value of the parameter
                cost_matrix:
                  type: array
                  items:
                    type: array
                    items:
                      type: integer
                      format: int64
                  description: >-
                    The cost matrix, indicating the costs for each type of
                    misclassification
                evaluation_measures:
                  type: object
                  properties:
                    evaluation_measure:
                      type: string
                      description: The evaluation measure to optimize in this task
          output:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the output, e.g. predictions'
                predictions:
                  type: object
                  properties:
                    format:
                      type: string
                      description: 'The fromat of the predictions, e.g. ARFF'
                    feature:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: 'The name of the prediction feature, e.g. row_id'
                          type:
                            type: string
                            description: 'The type of the prediction feature, e.g. integer'
          tag:
            type: array
            items:
              type: string
              description: >-
                Tags added by OpenML users. Includes study tags in the form
                `study_1`
  TaskList:
    type: object
    properties:
      task:
        type: object
        properties:
          task:
            type: array
            items:
              type: object
              properties:
                task_id:
                  type: string
                  description: The ID of the task
                task_type:
                  type: string
                  description: The type of task (e.g. Supervised Classificationr)
                did:
                  type: string
                  description: The id of the source dataset
                name:
                  type: string
                  description: The name of the source dataset
                status:
                  type: string
                  description: >-
                    The status of the source dataset, active, in_preparation, or
                    deactivated
                format:
                  type: string
                  description: The format of the source dataset
                input:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the input
                      value:
                        type: string
                        description: The value of the input
                quality:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the quality
                      value:
                        type: string
                        description: The value of the quality
                tag:
                  type: array
                  items:
                    type: string
                    description: >-
                      Tags added by OpenML users. Includes study tags in the
                      form `study_1`
  EstimationProcedureList:
    type: object
    properties:
      estimationprocedures:
        type: object
        properties:
          estimationprocedure:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The estimation procedure ID
                ttid:
                  type: string
                  description: The task type ID
                name:
                  type: string
                  description: >-
                    The estimation procedure name, e.g. '10 fold
                    Crossvalidation'
                type:
                  type: string
                  description: 'The estimation procedure type, e.g. ''crossvalidation'''
                repeats:
                  type: string
                  description: 'The number of repeats, e.g. ''10'''
                folds:
                  type: string
                  description: 'The number of cross-validation folds, e.g. ''10'''
                stratified_sampling:
                  type: string
                  description: 'Whether or not the sampling is stratified, ''true'' or ''false'''
  DataList:
    type: object
    properties:
      data:
        type: object
        properties:
          dataset:
            type: array
            items:
              type: object
              properties:
                did:
                  type: string
                  description: The dataset ID
                name:
                  type: string
                  description: The dataset name
                status:
                  type: string
                  description: >-
                    The dataset status, either in_preparation, active, or
                    deactivated
                format:
                  type: string
                  description: 'The data format of the dataset, e.g. ARFF'
                quality:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the property
                      value:
                        type: string
                        description: The value of the property
  DataQualities:
    type: object
    properties:
      data_qualities:
        type: object
        properties:
          quality:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the dataset quality measures
                value:
                  type: string
                  description: The value for this dataset
  DataFeatures:
    type: object
    properties:
      data_features:
        type: object
        properties:
          feature:
            type: array
            items:
              type: object
              properties:
                index:
                  type: string
                  description: Feature index
                name:
                  type: string
                  description: Feature name
                data_type:
                  type: string
                  description: Feature data type
                is_target:
                  type: string
                  description: Whether this feature is seen as a target feature
                is_ignore:
                  type: string
                  description: >-
                    Whether this feature should be ignored in modelling (e.g.
                    every value is unique)
                is_row_identifier:
                  type: string
                  description: Whether this feature is a row identifier
  Data:
    type: object
    properties:
      data_set_description:
        type: object
        required:
          - name
          - description
          - format
        properties:
          id:
            type: string
            description: 'ID of the dataset, a positive integer'
          name:
            type: string
            description: The name of the dataset
          version:
            type: string
            description: 'The version of the dataset, set by OpenML. A positive integer'
          description:
            type: string
            description: >-
              Wiki description of the dataset, in (Git flavoured) markdown
              format
          format:
            type: string
            description: 'Data format, for instance ARFF'
          upload_date:
            type: string
            description: >-
              The datetime that the dataset was uploaded, format yyyy-MM-dd
              HH:mm:ss
          licence:
            type: string
            description: >-
              The licence granted for using the dataset, for instance Public or
              CC-BY
          url:
            type: string
            description: The URL where the data can be downloaded
          file_id:
            type: string
            description: The ID of the dataset file stored on the OpenML server
          default_target_attribute:
            type: string
            description: >-
              For tabular data, the name of the column that is typically used as
              the target attribute for that data set
          version_label:
            type: string
            description: >-
              The version of the dataset, as defined by the uploader, for
              reference. Can be any format as long as it is unique.
          tag:
            type: array
            items:
              type: string
            description: >-
              Tags added by OpenML users. Includes study tags in the form
              `study_1`
          visibility:
            type: string
            description: Who can see the dataset. For instance `public`.
          original_data_url:
            type: string
            description: The URL where the original data is hosted.
          status:
            type: string
            description: 'active, in_preparation, or deactivated'
          md5_checksum:
            type: string
            description: Checksum to verify downloads of the dataset
  RunList:
    type: object
    properties:
      runs:
        type: object
        properties:
          run:
            type: array
            items:
              type: object
              properties:
                run_id:
                  type: string
                  description: The run ID
                task_id:
                  type: string
                  description: The ID of the task solved by this run
                setup_id:
                  type: string
                  description: Ignore (internal representation of the parameter setting)
                flow_id:
                  type: string
                  description: The ID of the flow used in this run
                uploader:
                  type: string
                  description: The ID of the person uploading this run
                error_message:
                  type: string
                  description: Error message generated by the run (if any)
  EvaluationList:
    type: object
    properties:
      evaluations:
        type: object
        properties:
          evaluation:
            type: array
            items:
              type: object
              properties:
                run_id:
                  type: string
                  description: The run ID
                task_id:
                  type: string
                  description: The ID of the tasks solved by this run
                flow_id:
                  type: string
                  description: The ID of the flow used by this run
                function:
                  type: string
                  description: The name of the evaluation function
                value:
                  type: string
                  description: The outcome of the evaluation
                array_data:
                  type: string
                  description: >-
                    For structured evaluation measures, an array of evaluation
                    values (e.g. per-class predictions, evaluation matrices,...)
  Setup:
    type: object
    properties:
      setup_parameters:
        type: object
        properties:
          flow_id:
            type: string
            description: 'ID of the flow, a positive integer'
          parameter_setting:
            type: array
            items:
              type: object
              description: Hyperparameter settings. Can be multiple.
              properties:
                full_name:
                  type: string
                  description: The full name of the hyperparameter
                parameter_name:
                  type: string
                  description: The short name of the hyperparameter
                data_type:
                  type: string
                  description: The data type of the hyperparameter value
                default_value:
                  type: string
                  description: The default value of the parameter used
                value:
                  type: string
                  description: The value of the parameter used
  Run:
    type: object
    properties:
      run_description:
        type: object
        properties:
          id:
            type: string
            description: 'ID of the run, a positive integer'
          uploader:
            type: string
            description: The uploader of the run
          uploader_name:
            type: string
            description: The name of the uploader of the run
          task_id:
            type: string
            description: The id of the task solved by this run
          task_type:
            type: string
            description: 'The type of task solved by this run (e.g., classification)'
          task_evaluation_measure:
            type: string
            description: >-
              The evaluation measure that is supposed to be optimized in the
              task, if any
          flow_id:
            type: string
            description: The id of the flow used in this run
          flow_name:
            type: string
            description: The name of the flow used in this run
          setup_string:
            type: string
            description: >-
              Configuration of the flow as a string, to be interpreted by the
              flow, its library, or command line interface.
          tag:
            type: array
            items:
              type: string
            description: >-
              Tags added by OpenML users. Includes study tags in the form
              `study_1`
          parameter_setting:
            type: array
            items:
              type: object
              description: Parameter settings used in this run. Can be multiple.
              properties:
                name:
                  type: string
                  description: The name of the parameter
                value:
                  type: string
                  description: The value of the parameter used
          input_data:
            type: object
            description: The input data for this run.
            properties:
              dataset:
                type: object
                properties:
                  did:
                    type: string
                    description: The id of the dataset
                  name:
                    type: string
                    description: The name of the dataset
                  url:
                    type: string
                    description: The download url of the dataset
          output_data:
            type: object
            description: The data generated by this run.
            properties:
              file:
                type: array
                items:
                  type: object
                  description: >-
                    Files uploaded by the user, e.g. run description,
                    predictions. Can be multiple.
                  properties:
                    did:
                      type: string
                      description: The id of the uploaded file
                    file_id:
                      type: string
                      description: >-
                        The reference id of the uploaded file, for downloading
                        afterward
                    name:
                      type: string
                      description: >-
                        The name of the uploaded file (e.g., description,
                        predictions, model,...)
              evaluation:
                type: array
                items:
                  type: object
                  description: >-
                    Evaluations uploaded by the user, e.g. runtimes, or computed
                    by the server (after run upload). Can be multiple.
                  properties:
                    name:
                      type: string
                      description: The name of the evaluation measure
                    flow_id:
                      type: string
                      description: >-
                        The id of the code used to compute this evaluation
                        method
                    value:
                      type: string
                      description: The result of the evaluation
                    array_data:
                      type: string
                      description: >-
                        For composite evaluation measures (e.g. per-class
                        measures, confusion matrix), a string (JSON)
                        representation of the   evaluation.
  TaskType:
    type: object
    properties:
      id:
        type: string
        description: 'ID of the task type, a positive integer'
      name:
        type: string
        description: 'The name of the task type, e.g. Supervised Classification'
      description:
        type: string
        description: A description of the task type
      contributor:
        type: array
        items:
          type: string
          description: A list of people who defined the task type
      date:
        type: string
        description: The date when the task type was created
      input:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: 'The name of the input, e.g. source_data'
            data_set:
              type: object
              properties:
                data_set_id:
                  type: string
                  description: The id of the dataset
                target_feature:
                  type: string
                  description: The name of the target feature for this task
            estimation_procedure:
              type: object
              properties:
                type:
                  type: string
                  description: 'The type of procedure, e.g. crossvalidation'
                data_splits_url:
                  type: string
                  description: The url where the data splits can be downloaded
                parameter:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the parameter
                      value:
                        type: string
                        description: The value of the parameter
            cost_matrix:
              type: array
              items:
                type: array
                items:
                  type: integer
                  format: int64
                description: >-
                  The cost matrix, indicating the costs for each type of
                  misclassification
            evaluation_measures:
              type: object
              properties:
                evaluation_measure:
                  type: string
                  description: The evaluation measure to optimize in this task
      output:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: 'The name of the output, e.g. predictions'
            predictions:
              type: object
              properties:
                format:
                  type: string
                  description: 'The format of the predictions, e.g. ARFF'
                feature:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: 'The name of the prediction feature, e.g. row_id'
                      type:
                        type: string
                        description: 'The type of the prediction feature, e.g. integer'
  TaskTypeList:
    type: object
    properties:
      task_types:
        type: object
        properties:
          task_type:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the task type
                name:
                  type: string
                  description: The name of the task type
                description:
                  type: string
                  description: A description of the task type
                creator:
                  type: string
                  description: A comma-separated list of the task type creators
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      additional_message:
        type: string